# matches = re.finditer(regex, text, re.MULTILINE)
# workMatch = enumerate(matches, start=1)

# p = re.compile('(\d+):(\d+):(\d+),(\d+)')
# m = re.match('\d+:\d+:\d+,\d+' , text)
# if m:
#    print (m.group(0))
# else:
#    print ("Pattern not found")


# p = re.compile('(blue|white|red)')
# >>> p.sub('colour', 'blue socks and red shoes')
# 'colour socks and colour shoes'
# >>> p.sub('colour', 'blue socks and red shoes', count=1)
# 'colour socks and red shoes'


# print (h)
# x = m.group(0)
# y = m.group(1)
# z = m.group(2)


import re
import string
from datetime import datetime, timedelta
import fileinput



# for matchNum, match in enumerate(matches, start=1):

#    print ("Match {matchNum} was found at {start}-{end}: {match}".format(matchNum = matchNum, start = match.start(), end = match.end(), match = match.group()))

#    for groupNum in range(0, len(match.groups())):
#        groupNum = groupNum + 1
#        group = match.group(groupNum)
#        print ("Group {groupNum} found at {start}-{end}: {group}".format(groupNum = groupNum, start = match.start(groupNum), end = match.end(groupNum), group = match.group(groupNum)))


fr = open('project.txt')
text = fr.read()
fr.close()
regex = r"(\d+):(\d+):(\d+),(\d+)"
matches = re.finditer(regex, text, re.MULTILINE)

def changeTimes():
    for matchNum, match in enumerate(matches, start=1):

        print("Match {matchNum} was found at {start}-{end}: {match}".format(matchNum=matchNum, start=match.start(),
                                                                            end=match.end(), match=match.group()))
        t1 = datetime.strptime(match.group(), "%H:%M:%S,%f")  # put your time instead
        delta = timedelta(seconds=5)  # seconds, minutes, hours, whatever
        t1 += delta
        print(t1.strftime("%H:%M:%S,%f")[:-4])

        # print(re.sub(regex, t1.strftime("%H:%M:%S,%f")[:-4], text, 400))
        with fileinput.FileInput('project.txt', inplace=True, backup='.bak') as file:
            for line in file:
                print(line.replace(r"(\d+):(\d+):(\d+),(\d+)", t1.strftime("%H:%M:%S,%f")[:-4]))
        '''
        for groupNum in range(0, len(match.groups())):
            groupNum = groupNum + 1
            group = match.group(groupNum)
            print("Group {groupNum} found at {start}-{end}: {group}".format(groupNum=groupNum,
                                                                            start=match.start(groupNum),
                                                                            end=match.end(groupNum),
                                                                            group=match.group(groupNum)))



            
            if groupNum == 1:
                q = group
            elif groupNum == 2:
                r = group
            elif groupNum == 3:
                s = group
            elif groupNum == 4:
                t = group
            else:
                toAppend = str(q) + str(r) + str(s) + str(t)
                z.append(toAppend)
                z += 500
            if (enumerate(z) == matchNum):
                return (z)
            else:
                continue
            '''


changeTimes()

# primeTimes = []
# for t in str.split(text):
#    try:
#        primeTimes.append(int(t))
#    except ValueError:
#        continue

# print(match.group(groupNum))


# for i in primeTimes:
# print(i)
